// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export namespace client {
    export interface ConfigurationClientConfiguration {
        /**
         * The client CA certificate
         */
        caCertificate: string;
        /**
         * The client certificate
         */
        clientCertificate: string;
        /**
         * The client key
         */
        clientKey: string;
    }

    export interface ConfigurationClientConfigurationArgs {
        /**
         * The client CA certificate
         */
        caCertificate: pulumi.Input<string>;
        /**
         * The client certificate
         */
        clientCertificate: pulumi.Input<string>;
        /**
         * The client key
         */
        clientKey: pulumi.Input<string>;
    }
}

export namespace cluster {
    export interface HealthClientConfiguration {
        /**
         * The client CA certificate
         */
        caCertificate: string;
        /**
         * The client certificate
         */
        clientCertificate: string;
        /**
         * The client key
         */
        clientKey: string;
    }

    export interface HealthClientConfigurationArgs {
        /**
         * The client CA certificate
         */
        caCertificate: pulumi.Input<string>;
        /**
         * The client certificate
         */
        clientCertificate: pulumi.Input<string>;
        /**
         * The client key
         */
        clientKey: pulumi.Input<string>;
    }

    export interface HealthTimeouts {
        /**
         * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
         */
        read?: string;
    }

    export interface HealthTimeoutsArgs {
        /**
         * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
         */
        read?: pulumi.Input<string>;
    }

    export interface KubeconfigClientConfiguration {
        /**
         * The client CA certificate
         */
        caCertificate: string;
        /**
         * The client certificate
         */
        clientCertificate: string;
        /**
         * The client key
         */
        clientKey: string;
    }

    export interface KubeconfigClientConfigurationArgs {
        /**
         * The client CA certificate
         */
        caCertificate: pulumi.Input<string>;
        /**
         * The client certificate
         */
        clientCertificate: pulumi.Input<string>;
        /**
         * The client key
         */
        clientKey: pulumi.Input<string>;
    }

    export interface KubeconfigTimeouts {
        /**
         * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
         */
        read?: string;
    }

    export interface KubeconfigTimeoutsArgs {
        /**
         * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
         */
        read?: pulumi.Input<string>;
    }
}

export namespace machine {
    export interface BootstrapClientConfiguration {
        /**
         * The client CA certificate
         */
        caCertificate: pulumi.Input<string>;
        /**
         * The client certificate
         */
        clientCertificate: pulumi.Input<string>;
        /**
         * The client key
         */
        clientKey: pulumi.Input<string>;
    }

    export interface BootstrapTimeouts {
        /**
         * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
         */
        create?: pulumi.Input<string>;
    }

    /**
     * A Machine Secrets Certificate
     */
    export interface Certificate {
        /**
         * Certificate
         */
        cert: string;
        /**
         * Private Key
         */
        key: string;
    }

    /**
     * A Machine Secrets Certificate
     */
    export interface CertificateArgs {
        /**
         * Certificate
         */
        cert: pulumi.Input<string>;
        /**
         * Private Key
         */
        key: pulumi.Input<string>;
    }

    /**
     * A complete Machine Secrets Certificates configuration
     */
    export interface Certificates {
        etcd: inputs.machine.Certificate;
        k8s: inputs.machine.Certificate;
        k8s_aggregator: inputs.machine.Certificate;
        k8s_serviceaccount: inputs.machine.Key;
        os: inputs.machine.Certificate;
    }

    /**
     * A complete Machine Secrets Certificates configuration
     */
    export interface CertificatesArgs {
        etcd: pulumi.Input<inputs.machine.CertificateArgs>;
        k8s: pulumi.Input<inputs.machine.CertificateArgs>;
        k8s_aggregator: pulumi.Input<inputs.machine.CertificateArgs>;
        k8s_serviceaccount: pulumi.Input<inputs.machine.KeyArgs>;
        os: pulumi.Input<inputs.machine.CertificateArgs>;
    }

    /**
     * A Machine Secrets Cluster Info
     */
    export interface Cluster {
        /**
         * Certificate
         */
        id: string;
        /**
         * Private Key
         */
        secret: string;
    }

    /**
     * A Machine Secrets Cluster Info
     */
    export interface ClusterArgs {
        /**
         * Certificate
         */
        id: pulumi.Input<string>;
        /**
         * Private Key
         */
        secret: pulumi.Input<string>;
    }

    export interface ConfigurationApplyClientConfiguration {
        /**
         * The client CA certificate
         */
        caCertificate: pulumi.Input<string>;
        /**
         * The client certificate
         */
        clientCertificate: pulumi.Input<string>;
        /**
         * The client key
         */
        clientKey: pulumi.Input<string>;
    }

    export interface DisksClientConfiguration {
        /**
         * The client CA certificate
         */
        caCertificate: string;
        /**
         * The client certificate
         */
        clientCertificate: string;
        /**
         * The client key
         */
        clientKey: string;
    }

    export interface DisksClientConfigurationArgs {
        /**
         * The client CA certificate
         */
        caCertificate: pulumi.Input<string>;
        /**
         * The client certificate
         */
        clientCertificate: pulumi.Input<string>;
        /**
         * The client key
         */
        clientKey: pulumi.Input<string>;
    }

    export interface DisksFilters {
        /**
         * Filter disks by bus path
         */
        busPath?: string;
        /**
         * Filter disks by modalias
         */
        modalias?: string;
        /**
         * Filter disks by model
         */
        model?: string;
        /**
         * Filter disks by name
         */
        name?: string;
        /**
         * Filter disks by serial number
         */
        serial?: string;
        /**
         * Filter disks by size
         */
        size?: string;
        /**
         * Filter disks by type
         */
        type?: string;
        /**
         * Filter disks by uuid
         */
        uuid?: string;
        /**
         * Filter disks by wwid
         */
        wwid?: string;
    }

    export interface DisksFiltersArgs {
        /**
         * Filter disks by bus path
         */
        busPath?: pulumi.Input<string>;
        /**
         * Filter disks by modalias
         */
        modalias?: pulumi.Input<string>;
        /**
         * Filter disks by model
         */
        model?: pulumi.Input<string>;
        /**
         * Filter disks by name
         */
        name?: pulumi.Input<string>;
        /**
         * Filter disks by serial number
         */
        serial?: pulumi.Input<string>;
        /**
         * Filter disks by size
         */
        size?: pulumi.Input<string>;
        /**
         * Filter disks by type
         */
        type?: pulumi.Input<string>;
        /**
         * Filter disks by uuid
         */
        uuid?: pulumi.Input<string>;
        /**
         * Filter disks by wwid
         */
        wwid?: pulumi.Input<string>;
    }

    export interface DisksTimeouts {
        /**
         * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
         */
        read?: string;
    }

    export interface DisksTimeoutsArgs {
        /**
         * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
         */
        read?: pulumi.Input<string>;
    }

    /**
     * A Machine Secrets Private Key
     */
    export interface Key {
        /**
         * Private Key
         */
        key: string;
    }

    /**
     * A Machine Secrets Private Key
     */
    export interface KeyArgs {
        /**
         * Private Key
         */
        key: pulumi.Input<string>;
    }

    /**
     * A complete Machine Secrets configuration
     */
    export interface MachineSecrets {
        certs: inputs.machine.Certificates;
        cluster: inputs.machine.Cluster;
        secrets: inputs.machine.Secrets;
        trustdinfo: inputs.machine.TrustdInfo;
    }

    /**
     * A complete Machine Secrets configuration
     */
    export interface MachineSecretsArgs {
        certs: pulumi.Input<inputs.machine.CertificatesArgs>;
        cluster: pulumi.Input<inputs.machine.ClusterArgs>;
        secrets: pulumi.Input<inputs.machine.SecretsArgs>;
        trustdinfo: pulumi.Input<inputs.machine.TrustdInfoArgs>;
    }

    /**
     * A Machine Secrets Bootstrap data
     */
    export interface Secrets {
        /**
         * The bootstrap token for the talos kubernetes cluster
         */
        bootstrap_token: string;
        /**
         * The secretbox encryption secret for the talos kubernetes cluster
         */
        secretbox_encryption_secret: string;
    }

    /**
     * A Machine Secrets Bootstrap data
     */
    export interface SecretsArgs {
        /**
         * The bootstrap token for the talos kubernetes cluster
         */
        bootstrap_token: pulumi.Input<string>;
        /**
         * The secretbox encryption secret for the talos kubernetes cluster
         */
        secretbox_encryption_secret: pulumi.Input<string>;
    }

    export interface SecretsClientConfiguration {
        /**
         * The client CA certificate
         */
        caCertificate?: pulumi.Input<string>;
        /**
         * The client certificate
         */
        clientCertificate?: pulumi.Input<string>;
        /**
         * The client key
         */
        clientKey?: pulumi.Input<string>;
    }

    export interface Timeout {
        /**
         * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
         */
        create?: pulumi.Input<string>;
        /**
         * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
         */
        update?: pulumi.Input<string>;
    }

    /**
     * A Machine Secrets Trust daemon info
     */
    export interface TrustdInfo {
        /**
         * The trustd token for the talos kubernetes cluster
         */
        token: string;
    }

    /**
     * A Machine Secrets Trust daemon info
     */
    export interface TrustdInfoArgs {
        /**
         * The trustd token for the talos kubernetes cluster
         */
        token: pulumi.Input<string>;
    }
}
