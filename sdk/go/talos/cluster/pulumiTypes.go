// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cluster

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-talos/sdk/go/talos/internal"
)

var _ = internal.GetEnvOrDefault

type GetHealthClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client key
	ClientKey string `pulumi:"clientKey"`
}

// GetHealthClientConfigurationInput is an input type that accepts GetHealthClientConfigurationArgs and GetHealthClientConfigurationOutput values.
// You can construct a concrete instance of `GetHealthClientConfigurationInput` via:
//
//	GetHealthClientConfigurationArgs{...}
type GetHealthClientConfigurationInput interface {
	pulumi.Input

	ToGetHealthClientConfigurationOutput() GetHealthClientConfigurationOutput
	ToGetHealthClientConfigurationOutputWithContext(context.Context) GetHealthClientConfigurationOutput
}

type GetHealthClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (GetHealthClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthClientConfiguration)(nil)).Elem()
}

func (i GetHealthClientConfigurationArgs) ToGetHealthClientConfigurationOutput() GetHealthClientConfigurationOutput {
	return i.ToGetHealthClientConfigurationOutputWithContext(context.Background())
}

func (i GetHealthClientConfigurationArgs) ToGetHealthClientConfigurationOutputWithContext(ctx context.Context) GetHealthClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHealthClientConfigurationOutput)
}

type GetHealthClientConfigurationOutput struct{ *pulumi.OutputState }

func (GetHealthClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthClientConfiguration)(nil)).Elem()
}

func (o GetHealthClientConfigurationOutput) ToGetHealthClientConfigurationOutput() GetHealthClientConfigurationOutput {
	return o
}

func (o GetHealthClientConfigurationOutput) ToGetHealthClientConfigurationOutputWithContext(ctx context.Context) GetHealthClientConfigurationOutput {
	return o
}

// The client CA certificate
func (o GetHealthClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o GetHealthClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client key
func (o GetHealthClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetHealthClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type GetHealthTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetHealthTimeoutsInput is an input type that accepts GetHealthTimeoutsArgs and GetHealthTimeoutsOutput values.
// You can construct a concrete instance of `GetHealthTimeoutsInput` via:
//
//	GetHealthTimeoutsArgs{...}
type GetHealthTimeoutsInput interface {
	pulumi.Input

	ToGetHealthTimeoutsOutput() GetHealthTimeoutsOutput
	ToGetHealthTimeoutsOutputWithContext(context.Context) GetHealthTimeoutsOutput
}

type GetHealthTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetHealthTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthTimeouts)(nil)).Elem()
}

func (i GetHealthTimeoutsArgs) ToGetHealthTimeoutsOutput() GetHealthTimeoutsOutput {
	return i.ToGetHealthTimeoutsOutputWithContext(context.Background())
}

func (i GetHealthTimeoutsArgs) ToGetHealthTimeoutsOutputWithContext(ctx context.Context) GetHealthTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHealthTimeoutsOutput)
}

func (i GetHealthTimeoutsArgs) ToGetHealthTimeoutsPtrOutput() GetHealthTimeoutsPtrOutput {
	return i.ToGetHealthTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetHealthTimeoutsArgs) ToGetHealthTimeoutsPtrOutputWithContext(ctx context.Context) GetHealthTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHealthTimeoutsOutput).ToGetHealthTimeoutsPtrOutputWithContext(ctx)
}

// GetHealthTimeoutsPtrInput is an input type that accepts GetHealthTimeoutsArgs, GetHealthTimeoutsPtr and GetHealthTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetHealthTimeoutsPtrInput` via:
//
//	        GetHealthTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetHealthTimeoutsPtrInput interface {
	pulumi.Input

	ToGetHealthTimeoutsPtrOutput() GetHealthTimeoutsPtrOutput
	ToGetHealthTimeoutsPtrOutputWithContext(context.Context) GetHealthTimeoutsPtrOutput
}

type getHealthTimeoutsPtrType GetHealthTimeoutsArgs

func GetHealthTimeoutsPtr(v *GetHealthTimeoutsArgs) GetHealthTimeoutsPtrInput {
	return (*getHealthTimeoutsPtrType)(v)
}

func (*getHealthTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetHealthTimeouts)(nil)).Elem()
}

func (i *getHealthTimeoutsPtrType) ToGetHealthTimeoutsPtrOutput() GetHealthTimeoutsPtrOutput {
	return i.ToGetHealthTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getHealthTimeoutsPtrType) ToGetHealthTimeoutsPtrOutputWithContext(ctx context.Context) GetHealthTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHealthTimeoutsPtrOutput)
}

type GetHealthTimeoutsOutput struct{ *pulumi.OutputState }

func (GetHealthTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHealthTimeouts)(nil)).Elem()
}

func (o GetHealthTimeoutsOutput) ToGetHealthTimeoutsOutput() GetHealthTimeoutsOutput {
	return o
}

func (o GetHealthTimeoutsOutput) ToGetHealthTimeoutsOutputWithContext(ctx context.Context) GetHealthTimeoutsOutput {
	return o
}

func (o GetHealthTimeoutsOutput) ToGetHealthTimeoutsPtrOutput() GetHealthTimeoutsPtrOutput {
	return o.ToGetHealthTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetHealthTimeoutsOutput) ToGetHealthTimeoutsPtrOutputWithContext(ctx context.Context) GetHealthTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetHealthTimeouts) *GetHealthTimeouts {
		return &v
	}).(GetHealthTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetHealthTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHealthTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetHealthTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetHealthTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetHealthTimeouts)(nil)).Elem()
}

func (o GetHealthTimeoutsPtrOutput) ToGetHealthTimeoutsPtrOutput() GetHealthTimeoutsPtrOutput {
	return o
}

func (o GetHealthTimeoutsPtrOutput) ToGetHealthTimeoutsPtrOutputWithContext(ctx context.Context) GetHealthTimeoutsPtrOutput {
	return o
}

func (o GetHealthTimeoutsPtrOutput) Elem() GetHealthTimeoutsOutput {
	return o.ApplyT(func(v *GetHealthTimeouts) GetHealthTimeouts {
		if v != nil {
			return *v
		}
		var ret GetHealthTimeouts
		return ret
	}).(GetHealthTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetHealthTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetHealthTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type GetKubeconfigClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client key
	ClientKey string `pulumi:"clientKey"`
}

// GetKubeconfigClientConfigurationInput is an input type that accepts GetKubeconfigClientConfigurationArgs and GetKubeconfigClientConfigurationOutput values.
// You can construct a concrete instance of `GetKubeconfigClientConfigurationInput` via:
//
//	GetKubeconfigClientConfigurationArgs{...}
type GetKubeconfigClientConfigurationInput interface {
	pulumi.Input

	ToGetKubeconfigClientConfigurationOutput() GetKubeconfigClientConfigurationOutput
	ToGetKubeconfigClientConfigurationOutputWithContext(context.Context) GetKubeconfigClientConfigurationOutput
}

type GetKubeconfigClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (GetKubeconfigClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubeconfigClientConfiguration)(nil)).Elem()
}

func (i GetKubeconfigClientConfigurationArgs) ToGetKubeconfigClientConfigurationOutput() GetKubeconfigClientConfigurationOutput {
	return i.ToGetKubeconfigClientConfigurationOutputWithContext(context.Background())
}

func (i GetKubeconfigClientConfigurationArgs) ToGetKubeconfigClientConfigurationOutputWithContext(ctx context.Context) GetKubeconfigClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubeconfigClientConfigurationOutput)
}

type GetKubeconfigClientConfigurationOutput struct{ *pulumi.OutputState }

func (GetKubeconfigClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubeconfigClientConfiguration)(nil)).Elem()
}

func (o GetKubeconfigClientConfigurationOutput) ToGetKubeconfigClientConfigurationOutput() GetKubeconfigClientConfigurationOutput {
	return o
}

func (o GetKubeconfigClientConfigurationOutput) ToGetKubeconfigClientConfigurationOutputWithContext(ctx context.Context) GetKubeconfigClientConfigurationOutput {
	return o
}

// The client CA certificate
func (o GetKubeconfigClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubeconfigClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o GetKubeconfigClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubeconfigClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client key
func (o GetKubeconfigClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubeconfigClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type GetKubeconfigKubernetesClientConfiguration struct {
	// The kubernetes CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The kubernetes client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The kubernetes client key
	ClientKey string `pulumi:"clientKey"`
	// The kubernetes host
	Host string `pulumi:"host"`
}

// GetKubeconfigKubernetesClientConfigurationInput is an input type that accepts GetKubeconfigKubernetesClientConfigurationArgs and GetKubeconfigKubernetesClientConfigurationOutput values.
// You can construct a concrete instance of `GetKubeconfigKubernetesClientConfigurationInput` via:
//
//	GetKubeconfigKubernetesClientConfigurationArgs{...}
type GetKubeconfigKubernetesClientConfigurationInput interface {
	pulumi.Input

	ToGetKubeconfigKubernetesClientConfigurationOutput() GetKubeconfigKubernetesClientConfigurationOutput
	ToGetKubeconfigKubernetesClientConfigurationOutputWithContext(context.Context) GetKubeconfigKubernetesClientConfigurationOutput
}

type GetKubeconfigKubernetesClientConfigurationArgs struct {
	// The kubernetes CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The kubernetes client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The kubernetes client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
	// The kubernetes host
	Host pulumi.StringInput `pulumi:"host"`
}

func (GetKubeconfigKubernetesClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubeconfigKubernetesClientConfiguration)(nil)).Elem()
}

func (i GetKubeconfigKubernetesClientConfigurationArgs) ToGetKubeconfigKubernetesClientConfigurationOutput() GetKubeconfigKubernetesClientConfigurationOutput {
	return i.ToGetKubeconfigKubernetesClientConfigurationOutputWithContext(context.Background())
}

func (i GetKubeconfigKubernetesClientConfigurationArgs) ToGetKubeconfigKubernetesClientConfigurationOutputWithContext(ctx context.Context) GetKubeconfigKubernetesClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubeconfigKubernetesClientConfigurationOutput)
}

type GetKubeconfigKubernetesClientConfigurationOutput struct{ *pulumi.OutputState }

func (GetKubeconfigKubernetesClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubeconfigKubernetesClientConfiguration)(nil)).Elem()
}

func (o GetKubeconfigKubernetesClientConfigurationOutput) ToGetKubeconfigKubernetesClientConfigurationOutput() GetKubeconfigKubernetesClientConfigurationOutput {
	return o
}

func (o GetKubeconfigKubernetesClientConfigurationOutput) ToGetKubeconfigKubernetesClientConfigurationOutputWithContext(ctx context.Context) GetKubeconfigKubernetesClientConfigurationOutput {
	return o
}

// The kubernetes CA certificate
func (o GetKubeconfigKubernetesClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubeconfigKubernetesClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The kubernetes client certificate
func (o GetKubeconfigKubernetesClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubeconfigKubernetesClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The kubernetes client key
func (o GetKubeconfigKubernetesClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubeconfigKubernetesClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

// The kubernetes host
func (o GetKubeconfigKubernetesClientConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubeconfigKubernetesClientConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

type GetKubeconfigTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// GetKubeconfigTimeoutsInput is an input type that accepts GetKubeconfigTimeoutsArgs and GetKubeconfigTimeoutsOutput values.
// You can construct a concrete instance of `GetKubeconfigTimeoutsInput` via:
//
//	GetKubeconfigTimeoutsArgs{...}
type GetKubeconfigTimeoutsInput interface {
	pulumi.Input

	ToGetKubeconfigTimeoutsOutput() GetKubeconfigTimeoutsOutput
	ToGetKubeconfigTimeoutsOutputWithContext(context.Context) GetKubeconfigTimeoutsOutput
}

type GetKubeconfigTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetKubeconfigTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubeconfigTimeouts)(nil)).Elem()
}

func (i GetKubeconfigTimeoutsArgs) ToGetKubeconfigTimeoutsOutput() GetKubeconfigTimeoutsOutput {
	return i.ToGetKubeconfigTimeoutsOutputWithContext(context.Background())
}

func (i GetKubeconfigTimeoutsArgs) ToGetKubeconfigTimeoutsOutputWithContext(ctx context.Context) GetKubeconfigTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubeconfigTimeoutsOutput)
}

func (i GetKubeconfigTimeoutsArgs) ToGetKubeconfigTimeoutsPtrOutput() GetKubeconfigTimeoutsPtrOutput {
	return i.ToGetKubeconfigTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetKubeconfigTimeoutsArgs) ToGetKubeconfigTimeoutsPtrOutputWithContext(ctx context.Context) GetKubeconfigTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubeconfigTimeoutsOutput).ToGetKubeconfigTimeoutsPtrOutputWithContext(ctx)
}

// GetKubeconfigTimeoutsPtrInput is an input type that accepts GetKubeconfigTimeoutsArgs, GetKubeconfigTimeoutsPtr and GetKubeconfigTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetKubeconfigTimeoutsPtrInput` via:
//
//	        GetKubeconfigTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetKubeconfigTimeoutsPtrInput interface {
	pulumi.Input

	ToGetKubeconfigTimeoutsPtrOutput() GetKubeconfigTimeoutsPtrOutput
	ToGetKubeconfigTimeoutsPtrOutputWithContext(context.Context) GetKubeconfigTimeoutsPtrOutput
}

type getKubeconfigTimeoutsPtrType GetKubeconfigTimeoutsArgs

func GetKubeconfigTimeoutsPtr(v *GetKubeconfigTimeoutsArgs) GetKubeconfigTimeoutsPtrInput {
	return (*getKubeconfigTimeoutsPtrType)(v)
}

func (*getKubeconfigTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKubeconfigTimeouts)(nil)).Elem()
}

func (i *getKubeconfigTimeoutsPtrType) ToGetKubeconfigTimeoutsPtrOutput() GetKubeconfigTimeoutsPtrOutput {
	return i.ToGetKubeconfigTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getKubeconfigTimeoutsPtrType) ToGetKubeconfigTimeoutsPtrOutputWithContext(ctx context.Context) GetKubeconfigTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubeconfigTimeoutsPtrOutput)
}

type GetKubeconfigTimeoutsOutput struct{ *pulumi.OutputState }

func (GetKubeconfigTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubeconfigTimeouts)(nil)).Elem()
}

func (o GetKubeconfigTimeoutsOutput) ToGetKubeconfigTimeoutsOutput() GetKubeconfigTimeoutsOutput {
	return o
}

func (o GetKubeconfigTimeoutsOutput) ToGetKubeconfigTimeoutsOutputWithContext(ctx context.Context) GetKubeconfigTimeoutsOutput {
	return o
}

func (o GetKubeconfigTimeoutsOutput) ToGetKubeconfigTimeoutsPtrOutput() GetKubeconfigTimeoutsPtrOutput {
	return o.ToGetKubeconfigTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetKubeconfigTimeoutsOutput) ToGetKubeconfigTimeoutsPtrOutputWithContext(ctx context.Context) GetKubeconfigTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetKubeconfigTimeouts) *GetKubeconfigTimeouts {
		return &v
	}).(GetKubeconfigTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetKubeconfigTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKubeconfigTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetKubeconfigTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetKubeconfigTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKubeconfigTimeouts)(nil)).Elem()
}

func (o GetKubeconfigTimeoutsPtrOutput) ToGetKubeconfigTimeoutsPtrOutput() GetKubeconfigTimeoutsPtrOutput {
	return o
}

func (o GetKubeconfigTimeoutsPtrOutput) ToGetKubeconfigTimeoutsPtrOutputWithContext(ctx context.Context) GetKubeconfigTimeoutsPtrOutput {
	return o
}

func (o GetKubeconfigTimeoutsPtrOutput) Elem() GetKubeconfigTimeoutsOutput {
	return o.ApplyT(func(v *GetKubeconfigTimeouts) GetKubeconfigTimeouts {
		if v != nil {
			return *v
		}
		var ret GetKubeconfigTimeouts
		return ret
	}).(GetKubeconfigTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o GetKubeconfigTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKubeconfigTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetHealthClientConfigurationInput)(nil)).Elem(), GetHealthClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHealthTimeoutsInput)(nil)).Elem(), GetHealthTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHealthTimeoutsPtrInput)(nil)).Elem(), GetHealthTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubeconfigClientConfigurationInput)(nil)).Elem(), GetKubeconfigClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubeconfigKubernetesClientConfigurationInput)(nil)).Elem(), GetKubeconfigKubernetesClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubeconfigTimeoutsInput)(nil)).Elem(), GetKubeconfigTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubeconfigTimeoutsPtrInput)(nil)).Elem(), GetKubeconfigTimeoutsArgs{})
	pulumi.RegisterOutputType(GetHealthClientConfigurationOutput{})
	pulumi.RegisterOutputType(GetHealthTimeoutsOutput{})
	pulumi.RegisterOutputType(GetHealthTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetKubeconfigClientConfigurationOutput{})
	pulumi.RegisterOutputType(GetKubeconfigKubernetesClientConfigurationOutput{})
	pulumi.RegisterOutputType(GetKubeconfigTimeoutsOutput{})
	pulumi.RegisterOutputType(GetKubeconfigTimeoutsPtrOutput{})
}
