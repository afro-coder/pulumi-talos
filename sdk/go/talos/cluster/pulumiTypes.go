// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cluster

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-talos/sdk/go/talos/internal"
)

var _ = internal.GetEnvOrDefault

type HealthClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client key
	ClientKey string `pulumi:"clientKey"`
}

// HealthClientConfigurationInput is an input type that accepts HealthClientConfigurationArgs and HealthClientConfigurationOutput values.
// You can construct a concrete instance of `HealthClientConfigurationInput` via:
//
//	HealthClientConfigurationArgs{...}
type HealthClientConfigurationInput interface {
	pulumi.Input

	ToHealthClientConfigurationOutput() HealthClientConfigurationOutput
	ToHealthClientConfigurationOutputWithContext(context.Context) HealthClientConfigurationOutput
}

type HealthClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (HealthClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthClientConfiguration)(nil)).Elem()
}

func (i HealthClientConfigurationArgs) ToHealthClientConfigurationOutput() HealthClientConfigurationOutput {
	return i.ToHealthClientConfigurationOutputWithContext(context.Background())
}

func (i HealthClientConfigurationArgs) ToHealthClientConfigurationOutputWithContext(ctx context.Context) HealthClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthClientConfigurationOutput)
}

type HealthClientConfigurationOutput struct{ *pulumi.OutputState }

func (HealthClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthClientConfiguration)(nil)).Elem()
}

func (o HealthClientConfigurationOutput) ToHealthClientConfigurationOutput() HealthClientConfigurationOutput {
	return o
}

func (o HealthClientConfigurationOutput) ToHealthClientConfigurationOutputWithContext(ctx context.Context) HealthClientConfigurationOutput {
	return o
}

// The client CA certificate
func (o HealthClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v HealthClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o HealthClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v HealthClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client key
func (o HealthClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v HealthClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type HealthTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// HealthTimeoutsInput is an input type that accepts HealthTimeoutsArgs and HealthTimeoutsOutput values.
// You can construct a concrete instance of `HealthTimeoutsInput` via:
//
//	HealthTimeoutsArgs{...}
type HealthTimeoutsInput interface {
	pulumi.Input

	ToHealthTimeoutsOutput() HealthTimeoutsOutput
	ToHealthTimeoutsOutputWithContext(context.Context) HealthTimeoutsOutput
}

type HealthTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (HealthTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthTimeouts)(nil)).Elem()
}

func (i HealthTimeoutsArgs) ToHealthTimeoutsOutput() HealthTimeoutsOutput {
	return i.ToHealthTimeoutsOutputWithContext(context.Background())
}

func (i HealthTimeoutsArgs) ToHealthTimeoutsOutputWithContext(ctx context.Context) HealthTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthTimeoutsOutput)
}

func (i HealthTimeoutsArgs) ToHealthTimeoutsPtrOutput() HealthTimeoutsPtrOutput {
	return i.ToHealthTimeoutsPtrOutputWithContext(context.Background())
}

func (i HealthTimeoutsArgs) ToHealthTimeoutsPtrOutputWithContext(ctx context.Context) HealthTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthTimeoutsOutput).ToHealthTimeoutsPtrOutputWithContext(ctx)
}

// HealthTimeoutsPtrInput is an input type that accepts HealthTimeoutsArgs, HealthTimeoutsPtr and HealthTimeoutsPtrOutput values.
// You can construct a concrete instance of `HealthTimeoutsPtrInput` via:
//
//	        HealthTimeoutsArgs{...}
//
//	or:
//
//	        nil
type HealthTimeoutsPtrInput interface {
	pulumi.Input

	ToHealthTimeoutsPtrOutput() HealthTimeoutsPtrOutput
	ToHealthTimeoutsPtrOutputWithContext(context.Context) HealthTimeoutsPtrOutput
}

type healthTimeoutsPtrType HealthTimeoutsArgs

func HealthTimeoutsPtr(v *HealthTimeoutsArgs) HealthTimeoutsPtrInput {
	return (*healthTimeoutsPtrType)(v)
}

func (*healthTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthTimeouts)(nil)).Elem()
}

func (i *healthTimeoutsPtrType) ToHealthTimeoutsPtrOutput() HealthTimeoutsPtrOutput {
	return i.ToHealthTimeoutsPtrOutputWithContext(context.Background())
}

func (i *healthTimeoutsPtrType) ToHealthTimeoutsPtrOutputWithContext(ctx context.Context) HealthTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthTimeoutsPtrOutput)
}

type HealthTimeoutsOutput struct{ *pulumi.OutputState }

func (HealthTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthTimeouts)(nil)).Elem()
}

func (o HealthTimeoutsOutput) ToHealthTimeoutsOutput() HealthTimeoutsOutput {
	return o
}

func (o HealthTimeoutsOutput) ToHealthTimeoutsOutputWithContext(ctx context.Context) HealthTimeoutsOutput {
	return o
}

func (o HealthTimeoutsOutput) ToHealthTimeoutsPtrOutput() HealthTimeoutsPtrOutput {
	return o.ToHealthTimeoutsPtrOutputWithContext(context.Background())
}

func (o HealthTimeoutsOutput) ToHealthTimeoutsPtrOutputWithContext(ctx context.Context) HealthTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HealthTimeouts) *HealthTimeouts {
		return &v
	}).(HealthTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o HealthTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type HealthTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (HealthTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthTimeouts)(nil)).Elem()
}

func (o HealthTimeoutsPtrOutput) ToHealthTimeoutsPtrOutput() HealthTimeoutsPtrOutput {
	return o
}

func (o HealthTimeoutsPtrOutput) ToHealthTimeoutsPtrOutputWithContext(ctx context.Context) HealthTimeoutsPtrOutput {
	return o
}

func (o HealthTimeoutsPtrOutput) Elem() HealthTimeoutsOutput {
	return o.ApplyT(func(v *HealthTimeouts) HealthTimeouts {
		if v != nil {
			return *v
		}
		var ret HealthTimeouts
		return ret
	}).(HealthTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o HealthTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type KubeconfigClientConfiguration struct {
	// The client CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The client key
	ClientKey string `pulumi:"clientKey"`
}

// KubeconfigClientConfigurationInput is an input type that accepts KubeconfigClientConfigurationArgs and KubeconfigClientConfigurationOutput values.
// You can construct a concrete instance of `KubeconfigClientConfigurationInput` via:
//
//	KubeconfigClientConfigurationArgs{...}
type KubeconfigClientConfigurationInput interface {
	pulumi.Input

	ToKubeconfigClientConfigurationOutput() KubeconfigClientConfigurationOutput
	ToKubeconfigClientConfigurationOutputWithContext(context.Context) KubeconfigClientConfigurationOutput
}

type KubeconfigClientConfigurationArgs struct {
	// The client CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
}

func (KubeconfigClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigClientConfiguration)(nil)).Elem()
}

func (i KubeconfigClientConfigurationArgs) ToKubeconfigClientConfigurationOutput() KubeconfigClientConfigurationOutput {
	return i.ToKubeconfigClientConfigurationOutputWithContext(context.Background())
}

func (i KubeconfigClientConfigurationArgs) ToKubeconfigClientConfigurationOutputWithContext(ctx context.Context) KubeconfigClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigClientConfigurationOutput)
}

type KubeconfigClientConfigurationOutput struct{ *pulumi.OutputState }

func (KubeconfigClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigClientConfiguration)(nil)).Elem()
}

func (o KubeconfigClientConfigurationOutput) ToKubeconfigClientConfigurationOutput() KubeconfigClientConfigurationOutput {
	return o
}

func (o KubeconfigClientConfigurationOutput) ToKubeconfigClientConfigurationOutputWithContext(ctx context.Context) KubeconfigClientConfigurationOutput {
	return o
}

// The client CA certificate
func (o KubeconfigClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The client certificate
func (o KubeconfigClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The client key
func (o KubeconfigClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

type KubeconfigKubernetesClientConfiguration struct {
	// The kubernetes CA certificate
	CaCertificate string `pulumi:"caCertificate"`
	// The kubernetes client certificate
	ClientCertificate string `pulumi:"clientCertificate"`
	// The kubernetes client key
	ClientKey string `pulumi:"clientKey"`
	// The kubernetes host
	Host string `pulumi:"host"`
}

// KubeconfigKubernetesClientConfigurationInput is an input type that accepts KubeconfigKubernetesClientConfigurationArgs and KubeconfigKubernetesClientConfigurationOutput values.
// You can construct a concrete instance of `KubeconfigKubernetesClientConfigurationInput` via:
//
//	KubeconfigKubernetesClientConfigurationArgs{...}
type KubeconfigKubernetesClientConfigurationInput interface {
	pulumi.Input

	ToKubeconfigKubernetesClientConfigurationOutput() KubeconfigKubernetesClientConfigurationOutput
	ToKubeconfigKubernetesClientConfigurationOutputWithContext(context.Context) KubeconfigKubernetesClientConfigurationOutput
}

type KubeconfigKubernetesClientConfigurationArgs struct {
	// The kubernetes CA certificate
	CaCertificate pulumi.StringInput `pulumi:"caCertificate"`
	// The kubernetes client certificate
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The kubernetes client key
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
	// The kubernetes host
	Host pulumi.StringInput `pulumi:"host"`
}

func (KubeconfigKubernetesClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubernetesClientConfiguration)(nil)).Elem()
}

func (i KubeconfigKubernetesClientConfigurationArgs) ToKubeconfigKubernetesClientConfigurationOutput() KubeconfigKubernetesClientConfigurationOutput {
	return i.ToKubeconfigKubernetesClientConfigurationOutputWithContext(context.Background())
}

func (i KubeconfigKubernetesClientConfigurationArgs) ToKubeconfigKubernetesClientConfigurationOutputWithContext(ctx context.Context) KubeconfigKubernetesClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigKubernetesClientConfigurationOutput)
}

type KubeconfigKubernetesClientConfigurationOutput struct{ *pulumi.OutputState }

func (KubeconfigKubernetesClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigKubernetesClientConfiguration)(nil)).Elem()
}

func (o KubeconfigKubernetesClientConfigurationOutput) ToKubeconfigKubernetesClientConfigurationOutput() KubeconfigKubernetesClientConfigurationOutput {
	return o
}

func (o KubeconfigKubernetesClientConfigurationOutput) ToKubeconfigKubernetesClientConfigurationOutputWithContext(ctx context.Context) KubeconfigKubernetesClientConfigurationOutput {
	return o
}

// The kubernetes CA certificate
func (o KubeconfigKubernetesClientConfigurationOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubernetesClientConfiguration) string { return v.CaCertificate }).(pulumi.StringOutput)
}

// The kubernetes client certificate
func (o KubeconfigKubernetesClientConfigurationOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubernetesClientConfiguration) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The kubernetes client key
func (o KubeconfigKubernetesClientConfigurationOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubernetesClientConfiguration) string { return v.ClientKey }).(pulumi.StringOutput)
}

// The kubernetes host
func (o KubeconfigKubernetesClientConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v KubeconfigKubernetesClientConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

type KubeconfigTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read *string `pulumi:"read"`
}

// KubeconfigTimeoutsInput is an input type that accepts KubeconfigTimeoutsArgs and KubeconfigTimeoutsOutput values.
// You can construct a concrete instance of `KubeconfigTimeoutsInput` via:
//
//	KubeconfigTimeoutsArgs{...}
type KubeconfigTimeoutsInput interface {
	pulumi.Input

	ToKubeconfigTimeoutsOutput() KubeconfigTimeoutsOutput
	ToKubeconfigTimeoutsOutputWithContext(context.Context) KubeconfigTimeoutsOutput
}

type KubeconfigTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (KubeconfigTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigTimeouts)(nil)).Elem()
}

func (i KubeconfigTimeoutsArgs) ToKubeconfigTimeoutsOutput() KubeconfigTimeoutsOutput {
	return i.ToKubeconfigTimeoutsOutputWithContext(context.Background())
}

func (i KubeconfigTimeoutsArgs) ToKubeconfigTimeoutsOutputWithContext(ctx context.Context) KubeconfigTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigTimeoutsOutput)
}

func (i KubeconfigTimeoutsArgs) ToKubeconfigTimeoutsPtrOutput() KubeconfigTimeoutsPtrOutput {
	return i.ToKubeconfigTimeoutsPtrOutputWithContext(context.Background())
}

func (i KubeconfigTimeoutsArgs) ToKubeconfigTimeoutsPtrOutputWithContext(ctx context.Context) KubeconfigTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigTimeoutsOutput).ToKubeconfigTimeoutsPtrOutputWithContext(ctx)
}

// KubeconfigTimeoutsPtrInput is an input type that accepts KubeconfigTimeoutsArgs, KubeconfigTimeoutsPtr and KubeconfigTimeoutsPtrOutput values.
// You can construct a concrete instance of `KubeconfigTimeoutsPtrInput` via:
//
//	        KubeconfigTimeoutsArgs{...}
//
//	or:
//
//	        nil
type KubeconfigTimeoutsPtrInput interface {
	pulumi.Input

	ToKubeconfigTimeoutsPtrOutput() KubeconfigTimeoutsPtrOutput
	ToKubeconfigTimeoutsPtrOutputWithContext(context.Context) KubeconfigTimeoutsPtrOutput
}

type kubeconfigTimeoutsPtrType KubeconfigTimeoutsArgs

func KubeconfigTimeoutsPtr(v *KubeconfigTimeoutsArgs) KubeconfigTimeoutsPtrInput {
	return (*kubeconfigTimeoutsPtrType)(v)
}

func (*kubeconfigTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeconfigTimeouts)(nil)).Elem()
}

func (i *kubeconfigTimeoutsPtrType) ToKubeconfigTimeoutsPtrOutput() KubeconfigTimeoutsPtrOutput {
	return i.ToKubeconfigTimeoutsPtrOutputWithContext(context.Background())
}

func (i *kubeconfigTimeoutsPtrType) ToKubeconfigTimeoutsPtrOutputWithContext(ctx context.Context) KubeconfigTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigTimeoutsPtrOutput)
}

type KubeconfigTimeoutsOutput struct{ *pulumi.OutputState }

func (KubeconfigTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeconfigTimeouts)(nil)).Elem()
}

func (o KubeconfigTimeoutsOutput) ToKubeconfigTimeoutsOutput() KubeconfigTimeoutsOutput {
	return o
}

func (o KubeconfigTimeoutsOutput) ToKubeconfigTimeoutsOutputWithContext(ctx context.Context) KubeconfigTimeoutsOutput {
	return o
}

func (o KubeconfigTimeoutsOutput) ToKubeconfigTimeoutsPtrOutput() KubeconfigTimeoutsPtrOutput {
	return o.ToKubeconfigTimeoutsPtrOutputWithContext(context.Background())
}

func (o KubeconfigTimeoutsOutput) ToKubeconfigTimeoutsPtrOutputWithContext(ctx context.Context) KubeconfigTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubeconfigTimeouts) *KubeconfigTimeouts {
		return &v
	}).(KubeconfigTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o KubeconfigTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeconfigTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type KubeconfigTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (KubeconfigTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeconfigTimeouts)(nil)).Elem()
}

func (o KubeconfigTimeoutsPtrOutput) ToKubeconfigTimeoutsPtrOutput() KubeconfigTimeoutsPtrOutput {
	return o
}

func (o KubeconfigTimeoutsPtrOutput) ToKubeconfigTimeoutsPtrOutputWithContext(ctx context.Context) KubeconfigTimeoutsPtrOutput {
	return o
}

func (o KubeconfigTimeoutsPtrOutput) Elem() KubeconfigTimeoutsOutput {
	return o.ApplyT(func(v *KubeconfigTimeouts) KubeconfigTimeouts {
		if v != nil {
			return *v
		}
		var ret KubeconfigTimeouts
		return ret
	}).(KubeconfigTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
func (o KubeconfigTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeconfigTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HealthClientConfigurationInput)(nil)).Elem(), HealthClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthTimeoutsInput)(nil)).Elem(), HealthTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthTimeoutsPtrInput)(nil)).Elem(), HealthTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigClientConfigurationInput)(nil)).Elem(), KubeconfigClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigKubernetesClientConfigurationInput)(nil)).Elem(), KubeconfigKubernetesClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigTimeoutsInput)(nil)).Elem(), KubeconfigTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigTimeoutsPtrInput)(nil)).Elem(), KubeconfigTimeoutsArgs{})
	pulumi.RegisterOutputType(HealthClientConfigurationOutput{})
	pulumi.RegisterOutputType(HealthTimeoutsOutput{})
	pulumi.RegisterOutputType(HealthTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(KubeconfigClientConfigurationOutput{})
	pulumi.RegisterOutputType(KubeconfigKubernetesClientConfigurationOutput{})
	pulumi.RegisterOutputType(KubeconfigTimeoutsOutput{})
	pulumi.RegisterOutputType(KubeconfigTimeoutsPtrOutput{})
}
